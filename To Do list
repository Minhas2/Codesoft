import json

# Initialize an empty task list or load existing tasks from a JSON file
try:
    with open('tasks.json', 'r') as file:
        tasks = json.load(file)
except FileNotFoundError:
    tasks = []

# Function to save tasks to the JSON file
def save_tasks():
    with open('tasks.json', 'w') as file:
        json.dump(tasks, file)

# Function to display the list of tasks
def list_tasks():
    if tasks:
        print("To-Do List:")
        for index, task in enumerate(tasks, start=1):
            print(f"{index}. {task['title']} - {'Completed' if task['completed'] else 'Not Completed'}")
    else:
        print("Your To-Do List is empty!")

# Function to add a new task
def add_task():
    title = input("Enter the task title: ")
    task = {"title": title, "completed": False}
    tasks.append(task)
    save_tasks()
    print(f"Task '{title}' added successfully!")

# Function to mark a task as completed
def complete_task():
    list_tasks()
    try:
        task_index = int(input("Enter the number of the task you want to mark as completed: ")) - 1
        tasks[task_index]['completed'] = True
        save_tasks()
        print(f"Task '{tasks[task_index]['title']}' marked as completed!")
    except (ValueError, IndexError):
        print("Invalid task number. Please try again.")

# Function to delete a task
def delete_task():
    list_tasks()
    try:
        task_index = int(input("Enter the number of the task you want to delete: ")) - 1
        deleted_task = tasks.pop(task_index)
        save_tasks()
        print(f"Task '{deleted_task['title']}' deleted successfully!")
    except (ValueError, IndexError):
        print("Invalid task number. Please try again.")

# Main loop
while True:
    print("\nOptions:")
    print("1. List tasks")
    print("2. Add task")
    print("3. Mark task as completed")
    print("4. Delete task")
    print("5. Quit")
    
    choice = input("Enter your choice: ")
    
    if choice == '1':
        list_tasks()
    elif choice == '2':
        add_task()
    elif choice == '3':
        complete_task()
    elif choice == '4':
        delete_task()
    elif choice == '5':
        print("Goodbye!")
        break
    else:
        print("Invalid choice. Please try again.")
